/* 2023-04-16T22:27:58Z */

/* ----------------------------------------------------------------------
Copyright (c) 2022-2023 Neuton.AI, Inc.
*
The source code and its binary form are being made available on the following terms:
Redistribution, use, and modification are permitted provided that the following
conditions are met:
*
1. Redistributions of source code and/or its binary form must retain the above copyright notice,
* this list of conditions (and the disclaimer) either in the body of the source code or in
* the documentation and/or other materials provided with the distribution of the binary form, as
applicable.
*
2. The name of the copyright holder may not be used to endorse or promote products derived from this
* source code or its binary form without specific prior written permission of Neuton.AI, Inc.
*
3. Disclaimer. THIS SOURCE CODE AND ITS BINARY FORM ARE PROVIDED BY THE COPYRIGHT HOLDER "AS IS".
* THE COPYRIGHT HOLDER HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
* PARTICULAR PURPOSE. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE HELD LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS
* OF THIRD PARTIES; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOURCE CODE OR ITS BINARY FORM, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
---------------------------------------------------------------------- */


static const neuton_weight_t MODEL_WEIGHTS[] = {
	-32768, 28724, 30856, 353, -3576, 636, 24009, -17903, -9529, 3280, 26690,
	-13435, 3933, 20399, -15606, -32768, -32768, 20292, -32766, 9764, 628,
	22523, 9530, -32768, -27112, -26666, -566, -4366, -13948, -15197, -18076,
	32755, 11501, -1290, 32737, -13502, 8193, -20644, 26637, -1037, -20442,
	8607, 32764, -11396, -29107, -15708, -9352, 5007, -32768, 20588, -16939,
	-29815, -32768, 2036, -32768, -32768, 9634, 6544, -22142, -7313, 685, 7304,
	17108, -23311, 12543, 8063, 453, 10954, 11683, 28518, -32766, -17596, -969,
	-30280, 32764, -12340, -24050, -32768, -323, -13647, 16858, 27358, -29790,
	-27804, -24471, 2711, 26723, 32764, 28324, -32752, -32768, -26432, 6144,
	-26830, 32756, -29077, -14464, 32760, 245, -32760, 32762, -32768, 12138,
	-17445, 30798, 975, -13825, 28988, -18151, 21263, 32765, 32761, -18793,
	-9096, 3977, 14638, 29497, -27165, -27335, -417, -14146, 32717, -11529,
	-31596, 15309, -22283, -6819, 15927, -9723, -31019, -24175, 25474, -1290,
	-32768, -25461, 12618, -14145, -10204, 2700, -26608, -32763, 4059, 9219,
	32763, 23294, -32541, 792, 32759, -17797, -15243, -24782, -12675, -15534,
	567, -32768, -32693, -12787, -30330, 0, -32763, 30469, 29370, -32768, 25513,
	16898, -32768, -32042, -25861, -32754, -32766, -31479, -32367, -15449,
	15209, 12775, 1388, -32768, -16409, -32768, -26145, 32767, 8184, -10904,
	-27413, -19888, -5565, 32765, -4, 32765, -31745, -32768, 25541, -21646,
	-4, 18801, 32760, 26278, 0, -25404, -9031, 1, 30270, 32764, -24371, -32696,
	-24166, 18524, 32563, -17281, 32756, -18502, -8367, -15052, -16723, 8298,
	32761, -24367, -13801, 97, -31121, -24085, -24267, 22218, -9881, -10568,
	1909, -11345, -21787, 31957, -31195, 7891, 32765, -2345, -32768, -32337,
	-32768, -32765, 29026, 8081, -32761, 29836, 13120, -13784, -30570, 24658,
	-13, 24500, -21285, -15838, 28957, -21346, -32768, -7101, 32764, -32768,
	-27171, 20595, -30390, 501, -15748, -26905, 19199, 10016, -32768, -4602,
	-23926, -32765, 27150, -32768, 19265, 4084, -32768, 32370, -27225, 25557,
	-22079, 1158, -27255, 2097, 19937, -23174, -27057, 10434, -32768, -2698,
	-7187, 13549, -32768, -32768, -32767, 20573, -3739, 32751, -14044, 32766,
	-23294, 0, 28086, -677, -26024, -32589, -32720, 32760, -5702, -11, -24516,
	32762, -30662, -18018, 28061, 28550, -6962, -979, 20262, 11600, -26307,
	32216, -32768, 0, -32768, -32768, 30609, 30717, -25843, 12283, 0, -22539,
	28810, -10865, -11382, 32765, -32768, -32768, -28058, -32768, -22150, -24603,
	-32277, 22059, -32768, 32209, 30815, -22262, -32768, 30572, 26505, 32765,
	31332, -29285, -9650, -32768, -6262, -30282, -32768, 32765, -32768, 11129,
	-31952, -26110, -32768, -28904, 14857, 11436, 8727, 32765, -16866, 32765,
	9828, -32768, 11689, 6689, 2169, -2869, 8153, -3398, 19178, 32764, -15260,
	3778, 21866, 22897, 32764, 12311, -19730, -10838, 3734, 17221, 32743, 14383,
	17190, -25448, -171, 32765, 29307, 32764, 14179, -17562, 15903, -267, 30415,
	-32768, 32542, -19316, -19489, 9726, -5224, 32765, 30460, 7361, -19014,
	-31800, 3765, -858, 9130, -24159, -3497, -32751, -25718, 32767, 3767, -7743,
	5424, 32765, -32768, -32768, -5202, -5, -32454, 11208, 32250, 15578, 30188,
	-22976, 18543, 32755, -32630, -22618, 30457, -9743, 32762, 31386, 32764,
	15185, -21669, 19066, -12243, -26729, 10233, 29362, 32754, -24452, -5190,
	-27040, 23218, -17737, -8101, 31271, -23994, -32756, -32768, 10225, -26331,
	32764, 10546, 26095, -24607, -27769, 131, -21143, -16948, 32764, 12489,
	22457, -9230, 23471, -32768, 32765, -13748, -30265, 12003, 22356, -14823,
	10110, 17415, 12908, 32765, -21930, 9985, -18770, -7531, 22733, 27935,
	16658, -8663, -13481 };

static const neuton_sources_num_t MODEL_LINKS[] = {
	2, 9, 13, 33, 62, 100, 0, 2, 3, 62, 71, 78, 100, 0, 5, 6, 49, 87, 98, 99,
	100, 2, 5, 6, 9, 94, 100, 3, 10, 17, 69, 71, 95, 100, 4, 17, 23, 52, 72,
	100, 1, 43, 51, 72, 85, 86, 100, 0, 2, 18, 37, 50, 56, 100, 2, 4, 7, 48,
	52, 91, 100, 6, 8, 13, 56, 82, 100, 6, 40, 59, 77, 88, 100, 1, 0, 5, 6,
	95, 100, 2, 3, 4, 53, 79, 86, 100, 12, 23, 28, 53, 55, 78, 100, 9, 13,
	47, 61, 62, 100, 2, 13, 3, 7, 9, 43, 100, 14, 72, 81, 82, 83, 84, 88, 100,
	1, 23, 45, 55, 90, 100, 1, 9, 10, 30, 58, 100, 12, 17, 39, 42, 93, 95,
	100, 6, 17, 24, 51, 95, 100, 5, 38, 41, 45, 71, 75, 85, 100, 3, 4, 6, 44,
	83, 84, 100, 12, 12, 22, 27, 70, 94, 100, 6, 30, 35, 66, 85, 86, 89, 100,
	3, 13, 59, 60, 62, 85, 100, 21, 5, 9, 16, 39, 100, 1, 10, 36, 96, 99, 100,
	14, 11, 15, 42, 89, 100, 4, 21, 24, 36, 42, 82, 100, 32, 36, 54, 61, 68,
	100, 17, 25, 34, 74, 81, 100, 9, 28, 39, 52, 70, 100, 1, 16, 26, 63, 89,
	95, 100, 9, 33, 34, 43, 73, 85, 100, 10, 14, 30, 37, 82, 100, 14, 18, 6,
	16, 40, 97, 100, 1, 5, 32, 34, 58, 67, 100, 14, 16, 7, 51, 52, 100, 2,
	7, 17, 27, 98, 100, 4, 15, 63, 76, 94, 100, 40, 8, 28, 69, 92, 100, 21,
	5, 9, 19, 28, 67, 72, 100, 1, 16, 20, 55, 74, 96, 100, 34, 37, 1, 29, 45,
	97, 100, 1, 27, 29, 52, 80, 100, 1, 19, 5, 21, 48, 60, 100, 8, 16, 18,
	42, 92, 93, 100, 7, 14, 39, 8, 42, 44, 100, 1, 3, 5, 7, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
	100, 0, 1, 2, 3, 15, 38, 88, 100, 11, 14, 21, 47, 25, 76, 100, 19, 23,
	25, 11, 13, 100, 18, 32, 34, 37, 61, 96, 100, 27, 52, 13, 22, 86, 88, 100,
	13, 36, 51, 84, 85, 92, 100, 5, 21, 40, 52, 61, 83, 100, 22, 24, 45, 48,
	53, 2, 100, 27, 28, 32, 57, 64, 100, 17, 43, 6, 65, 78, 100, 11, 20, 33,
	35, 37, 41, 39, 58, 100, 16, 29, 46, 47, 79, 80, 83, 46, 17, 29, 37, 73,
	100, 2, 32, 44, 14, 31, 46, 100, 1, 33, 40, 46, 73, 100, 0, 2, 4, 6, 8,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100 };

static const neuton_weights_num_t MODEL_INTERNAL_LINKS_BOUNDARIES[] = {
	0, 7, 13, 22, 28, 35, 41, 49, 57, 63, 67, 74, 82, 86, 94, 101, 106, 115,
	121, 127, 133, 139, 147, 155, 161, 170, 177, 183, 189, 196, 201, 207, 215,
	221, 227, 236, 241, 249, 255, 259, 265, 272, 278, 286, 294, 301, 307, 315,
	322, 370, 377, 383, 389, 396, 401, 408, 416, 425, 430, 435, 445, 452, 456,
	464, 471, 494 };

static const neuton_weights_num_t MODEL_EXTERNAL_LINKS_BOUNDARIES[] = {
	6, 13, 21, 27, 34, 40, 47, 54, 61, 67, 73, 79, 86, 93, 99, 106, 114, 120,
	126, 133, 139, 147, 154, 161, 169, 176, 182, 188, 194, 201, 207, 213, 219,
	226, 233, 239, 246, 253, 259, 265, 271, 277, 285, 292, 299, 305, 312, 319,
	326, 371, 379, 386, 392, 399, 406, 413, 420, 427, 433, 439, 448, 455, 461,
	468, 474, 495 };

static const neuton_coeff_t MODEL_ACTIVATION_COEFFS[] = {
	40936, 18171, 40959, 39163, 40940, 38182, 40909, 40959, 40958, 21249, 40623,
	40958, 40933, 40960, 40926, 40958, 40960, 40956, 40960, 40946, 40952, 40960,
	40950, 40957, 40958, 40958, 40905, 40957, 40932, 40959, 40960, 40918, 40864,
	40931, 40957, 40958, 40209, 38356, 40960, 40954, 40957, 40959, 40919, 40919,
	40948, 40960, 40919, 24357, 40960, 40960, 40957, 31792, 35224, 36079, 40759,
	35810, 40960, 33409, 38379, 40959, 28163, 30744, 40923, 40959, 27817, 40960 };

static const neuton_neurons_num_t MODEL_OUTPUT_NEURONS[] = { 65, 49 };


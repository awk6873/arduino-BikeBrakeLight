/* 2023-03-25T15:44:45Z */

/* ----------------------------------------------------------------------
Copyright (c) 2022-2023 Neuton.AI, Inc.
*
The source code and its binary form are being made available on the following terms:
Redistribution, use, and modification are permitted provided that the following
conditions are met:
*
1. Redistributions of source code and/or its binary form must retain the above copyright notice,
* this list of conditions (and the disclaimer) either in the body of the source code or in
* the documentation and/or other materials provided with the distribution of the binary form, as
applicable.
*
2. The name of the copyright holder may not be used to endorse or promote products derived from this
* source code or its binary form without specific prior written permission of Neuton.AI, Inc.
*
3. Disclaimer. THIS SOURCE CODE AND ITS BINARY FORM ARE PROVIDED BY THE COPYRIGHT HOLDER "AS IS".
* THE COPYRIGHT HOLDER HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
* PARTICULAR PURPOSE. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE HELD LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS
* OF THIRD PARTIES; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOURCE CODE OR ITS BINARY FORM, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
---------------------------------------------------------------------- */


static const neuton_weight_t MODEL_WEIGHTS[] = {
	-32768, 2220, 9968, 21429, 11764, 14209, 28874, -29090, 18804, -32763,
	-21109, 8693, -32698, -32000, 25494, 23576, -21797, 9462, 9583, 12149,
	-24088, 14091, -4715, 16349, -18864, -10696, -32768, 32719, -32767, -30350,
	-5158, 3452, 490, 20342, -11174, 29998, -30667, -9302, 1378, -31226, 32761,
	-31099, -28715, -24722, 8183, 31741, -19983, -32759, -3699, 32755, -17084,
	-586, -4530, -7360, -32768, -7896, 19666, -3, -22530, -23872, -32768, 4824,
	7775, 4090, -32768, -25938, 32765, -7793, 16799, 8188, 17727, 32749, -1084,
	-17768, 14596, -30845, 992, 5857, -4441, -28110, 32763, -32767, -4000,
	-334, -32768, -32768, 32765, -23970, -6877, 8187, 14105, -32768, 30950,
	-19068, -32762, 25789, -11784, 17018, -8640, 30730, 32761, -29960, -25327,
	-1557, -32765, -29777, 6740, 9839, 10332, 2180, 26152, -32766, 31786, 8195,
	4481, -16250, 32515, 8404, 15505, 6606, -32665, -27596, 28914, -32768,
	-27154, -32768, 24877, -31846, 0, -12420, 21907, -32756, -24121, 29815,
	30319, 690, -31754, -32768, 25715, -16106, -32542, 4738, -8004, -23374,
	-32766, -24914, 25065, -32768, -141, 4575, 24641, 6981, -29665, -16001,
	2939, 28688, -11347, 23471, -32766, -32755, -19163, 0, 28388, 32764, 15888,
	-4725, -11821, 309, 32763, -7641, -5185, 10862, 20585, -30810, -6158, 32766,
	-31560, -12503, -32768, -24147, -32768, -3081, 4105, 11269, -32756, 24561,
	9217, 2386, 3764, -32768, -32768, 32752, -24536, -32762, -157, 17051, -32759,
	-11180, 24155, -30663, -32728, -1139, -4104, 32764, 14153, -12953, 6452,
	-32750, -4665, -1360, 0, -32768, -16616, -32768, 32766, -32768, 8187, 6477,
	-8347, -26095, 27673, 32765, -32768, 32765, 24144, -11075, 31182, 32762,
	12445, -25173, 28794, 32765, 28526, 32765, -17930, -32768, -20556, 28534,
	22692, 18787, 32765, 29231, -15195, 32765, 31663, 11351, 1893, -13793,
	1879, -2464, -229, 22609, 31020, -52, 32300, -22336, -2616, 13062, -20801,
	-2316, -13615, -16998, -12708, -8213, -27419, 2401, 132, -32768, -14020,
	-17941, -27443, 28726, -12230, 6449, 2104, 8767, 22951, -16120, -25671,
	2036, -32766, 31592, -6426, 15299, 27759, -20378, -14817, 5069, 12161,
	-13647, -20804, 10911, 32555, 32764, 14481, 7368, -869 };

static const neuton_sources_num_t MODEL_LINKS[] = {
	0, 5, 14, 16, 93, 97, 0, 3, 7, 15, 93, 97, 1, 5, 46, 54, 74, 81, 97, 2,
	8, 24, 28, 89, 96, 97, 3, 22, 24, 49, 54, 94, 97, 4, 68, 77, 79, 89, 97,
	1, 8, 51, 63, 69, 97, 6, 21, 52, 67, 74, 77, 97, 1, 14, 46, 48, 71, 97,
	7, 16, 19, 40, 50, 97, 3, 30, 43, 64, 89, 97, 16, 30, 34, 43, 72, 76, 97,
	3, 11, 17, 45, 53, 66, 97, 1, 25, 26, 66, 82, 97, 6, 27, 34, 65, 78, 88,
	97, 9, 10, 11, 35, 75, 86, 97, 1, 16, 31, 41, 67, 97, 12, 23, 26, 36, 59,
	97, 16, 39, 42, 43, 52, 97, 8, 27, 69, 84, 85, 90, 97, 13, 8, 34, 56, 88,
	93, 97, 29, 33, 58, 87, 92, 97, 0, 8, 21, 2, 32, 70, 97, 12, 15, 16, 55,
	89, 97, 8, 12, 22, 44, 57, 67, 97, 17, 18, 19, 14, 68, 97, 2, 3, 15, 17,
	44, 76, 97, 18, 37, 39, 52, 81, 95, 97, 12, 4, 18, 52, 56, 97, 2, 28, 15,
	35, 73, 93, 97, 10, 20, 11, 36, 38, 44, 76, 97, 14, 8, 47, 86, 91, 92,
	97, 18, 20, 62, 78, 80, 83, 97, 0, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 97,
	0, 1, 3, 4, 11, 25, 97, 9, 13, 14, 25, 45, 97, 14, 20, 24, 32, 23, 36,
	97, 10, 15, 5, 16, 50, 61, 97, 12, 21, 22, 14, 84, 97, 13, 41, 60, 70,
	78, 97, 1, 3, 5, 7, 34, 35, 36, 37, 38, 39, 97 };

static const neuton_weights_num_t MODEL_INTERNAL_LINKS_BOUNDARIES[] = {
	0, 7, 13, 20, 27, 34, 39, 46, 52, 59, 64, 70, 78, 85, 90, 97, 104, 110,
	116, 123, 130, 136, 145, 150, 157, 165, 172, 175, 183, 190, 197, 204, 211,
	246, 253, 256, 264, 269, 277, 280, 296 };

static const neuton_weights_num_t MODEL_EXTERNAL_LINKS_BOUNDARIES[] = {
	6, 12, 19, 26, 33, 39, 45, 52, 58, 64, 70, 77, 84, 90, 97, 104, 110, 116,
	122, 129, 136, 142, 149, 155, 162, 168, 175, 182, 188, 195, 203, 210, 217,
	247, 254, 260, 267, 274, 280, 286, 297 };

static const neuton_coeff_t MODEL_ACTIVATION_COEFFS[] = {
	40919, 20504, 11427, 33307, 40958, 29362, 40958, 40960, 40960, 35183, 40922,
	40960, 40932, 39661, 40960, 40932, 40952, 40958, 40930, 40960, 40953, 40928,
	40960, 40960, 40960, 40824, 40932, 40955, 40955, 40958, 38406, 40955, 40932,
	40960, 26228, 35829, 39042, 12856, 40922, 40926, 40958 };

static const neuton_neurons_num_t MODEL_OUTPUT_NEURONS[] = { 33, 40 };

